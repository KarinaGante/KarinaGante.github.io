<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CVE-2025-9143 - Tag - Karina Gante</title>
        <link>http://localhost:1313/tags/cve-2025-9143/</link>
        <description>CVE-2025-9143 - Tag - Karina Gante</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>karina.gante1@gmail.com (Karina Gante)</managingEditor>
            <webMaster>karina.gante1@gmail.com (Karina Gante)</webMaster><lastBuildDate>Wed, 20 Aug 2025 21:29:01 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/tags/cve-2025-9143/" rel="self" type="application/rss+xml" /><item>
    <title>CVE-2025-9143</title>
    <link>http://localhost:1313/cve-2025-9143/</link>
    <pubDate>Wed, 20 Aug 2025 21:29:01 &#43;0800</pubDate><author>
                        <name>Karina</name><uri>https://github.com/KarinaGante</uri></author><guid>http://localhost:1313/cve-2025-9143/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/CVE-2025-9143/CVE-2025-9143.png" referrerpolicy="no-referrer">
            </div><p>Three XSS in One Page? Scada-LTS Fails to Sanitize Inputs in <strong>Mailing List</strong> Settings</p>
<blockquote>
  <p><em><strong>ðŸ‡§ðŸ‡· Ler em <a href="http://karinagante.github.io/pt-br/cve-2025-9143" target="_blank" rel="noopener noreferrer">PortuguÃªs</a>.</strong></em></p>
</blockquote><h2 id="cve-2025-9143" class="headerLink">
    <a href="#cve-2025-9143" class="header-mark"></a>CVE-2025-9143</h2><h3 id="introduction" class="headerLink">
    <a href="#introduction" class="header-mark"></a>Introduction</h3><p align="justify">While exploring the mailing list configuration section of <b><a href="https://github.com/SCADA-LTS/Scada-LTS" target=_blank>Scada-LTS</a></b>, I stumbled upon something that immediately raised a red flag: <b>three separate fields on the same page were vulnerable to stored XSS.</b>.</br></br>In this post, Iâ€™ll guide you through what I found in the <b>mailing_lists.shtm</b> endpoint, how each vector works, and why this kind of oversight can have severe consequences â€” especially in software used to control industrial systems.</p>]]></description>
</item></channel>
</rss>
